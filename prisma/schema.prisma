generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model EmailVerification {
  id         String   @id @default(cuid())
  userId     String   @unique
  expired_at DateTime
  user       User     @relation(fields: [userId], references: [id])
}

model PasswordResetToken {
  id         String   @id @default(cuid())
  userId     String   @unique
  expired_at DateTime
  user       User     @relation(fields: [userId], references: [id])
}

model Session {
  id     String @id @default(cuid())
  userId String
  user   User   @relation(fields: [userId], references: [id])
}

model User {
  id           String              @id @default(cuid())
  name         String
  email        String              @unique
  is_verified  Boolean             @default(false)
  password     String
  address      String
  tel          String
  verification EmailVerification?
  resetToken   PasswordResetToken?
  reservations Reservation[]
  session      Session[]
}

model Note {
  id         String   @id @default(cuid())
  title      String
  content    String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Reservation {
  id         String   @id @default(cuid())
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  item       String
  storeId    String
  userId     String
  date       DateTime
  store      Store    @relation(fields: [storeId], references: [id], onDelete: Cascade)
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Store {
  id           String        @id @default(cuid())
  name         String
  mail         String
  reservations Reservation[]
}
