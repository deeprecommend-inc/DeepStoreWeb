datasource db {
  provider    = "postgresql"
  url         = env("DATABASE_URL")
}

generator client {
  provider    = "prisma-client-js"
}

model EmailVerification {
  id            String  @id @default(cuid())
  userId        String  @unique
  user          User    @relation(fields:[userId], references: [id])
  expired_at    DateTime 
}

model PasswordResetToken {
  id            String    @id @default(cuid())
  userId        String    @unique
  user          User      @relation(fields: [userId], references: [id])
  expired_at    DateTime
}

model Session {
  id            String    @id @default(cuid())
  userId        String    
  user          User      @relation(fields: [userId], references: [id ])
}

model User {
  id            String    @id @default(cuid())
  name          String 
  email         String    @unique
  password      String
  tel           String
  address       String
  reservations  Reservation[]
  session       Session[]
  is_verified   Boolean   @default(false)
  verification  EmailVerification?
  resetToken    PasswordResetToken?
}

model Note {
  id            String    @id @default(cuid())
  title         String
  content       String
  created_at    DateTime  @default(now())
  updated_at    DateTime  @updatedAt
}

model Reservation {
  id            String    @id @default(cuid())
  item          String
  date          DateTime
  userId        String
  user          User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  storeId       String
  store         Store      @relation(fields: [storeId], references: [id], onDelete: Cascade)
  created_at    DateTime   @default(now())
  updated_at    DateTime   @updatedAt
}

model Store {
  id            String @id @default(cuid())
  name          String
  mail          String
  reservations  Reservation[]
}